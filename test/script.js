let questions = [
    {
        question: "–ö–∞–∫–≤–æ –µ pH –Ω–∞ —á–æ–≤–µ—à–∫–∞—Ç–∞ –∫–æ—Å–∞? üíá‚Äç‚ôÄÔ∏è",
        options: ["4.5-5.5", "6.5-7.5", "8.5-9.5", "10.5-11.5"],
        correct: 0
    },
    {
        question: "–ö–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ –∑–∞ –∫—ä–¥—Ä–µ–Ω–µ? ‚úÇÔ∏è",
        options: ["–ù–æ–∂–∏—Ü–∞", "–ú–∞—à–∏–Ω–∫–∞", "–ü—Ä–µ—Å–∞ –∑–∞ –∫—ä–¥—Ä–∏—Ü–∏", "–°–µ—à–æ–∞—Ä"],
        correct: 2
    },
    {
        question: "–ö–∞–∫–≤–æ –µ —Ç—Ä–∏—Ö–æ–ª–æ–≥–∏—è? üî¨",
        options: ["–ù–∞—É–∫–∞ –∑–∞ –∫–æ—Å–∞—Ç–∞", "–ù–∞—É–∫–∞ –∑–∞ –Ω–æ–∫—Ç–∏—Ç–µ", "–ù–∞—É–∫–∞ –∑–∞ –∫–æ–∂–∞—Ç–∞", "–ù–∞—É–∫–∞ –∑–∞ –∑—ä–±–∏—Ç–µ"],
        correct: 0
    },
    {
        question: "–ö–æ–ª–∫–æ —Å–ª–æ—è –∏–º–∞ –∫–æ—Å—ä–º—ä—Ç? üß¨",
        options: ["1", "2", "3", "4"],
        correct: 2
    },
    {
        question: "–ö–∞–∫–≤–æ –µ –±–∞–ª—Å–∞–º –∑–∞ –∫–æ—Å–∞? üß¥",
        options: ["–ü–æ—á–∏—Å—Ç–≤–∞", "–•–∏–¥—Ä–∞—Ç–∏—Ä–∞", "–ë–æ—è–¥–∏—Å–≤–∞", "–ü–æ–¥—Å—Ç—Ä–∏–≥–≤–∞"],
        correct: 1
    },
    {
        question: "–ö–∞–∫–≤–æ –µ —Ç—Ä–∏—Ö–æ—Ç–∏–ª–æ–º–∞–Ω–∏—è? üòü",
        options: ["–ö–æ–º–ø—É–ª—Å–∏–≤–Ω–æ —Å–∫—É–±–∞–Ω–µ –Ω–∞ –∫–æ—Å–∞", "–ò–∑—Ç—ä–Ω—è–≤–∞–Ω–µ –Ω–∞ –∫–æ—Å–∞—Ç–∞", "–ë–æ—è–¥–∏—Å–≤–∞–Ω–µ –Ω–∞ –∫–æ—Å–∞", "–ö—ä–¥—Ä–µ–Ω–µ –Ω–∞ –∫–æ—Å–∞"],
        correct: 0
    },
    {
        question: "–ö–æ–π —Ç–∏–ø –∫–æ—Å–∞ –∏–º–∞ –Ω–∞–π-–º–∞–ª–∫–æ –ø–∏–≥–º–µ–Ω—Ç? üåà",
        options: ["–ë–ª–æ–Ω–¥–∏–Ω", "–ë—Ä—é–Ω–µ—Ç", "–ß–µ—Ä–≤–µ–Ω", "–°–∏–≤"],
        correct: 0
    },
    {
        question: "–ö–∞–∫–≤–æ –µ –ø–æ—Ä–æ–∑–Ω–æ—Å—Ç –Ω–∞ –∫–æ—Å–∞—Ç–∞? üíß",
        options: ["–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—Ç–∞ –¥–∞ –∞–±—Å–æ—Ä–±–∏—Ä–∞ –≤–ª–∞–≥–∞", "–¶–≤—è—Ç –Ω–∞ –∫–æ—Å–∞—Ç–∞", "–î—ä–ª–∂–∏–Ω–∞ –Ω–∞ –∫–æ—Å–∞—Ç–∞", "–§–æ—Ä–º–∞ –Ω–∞ –∫–æ—Å—ä–º–∞"],
        correct: 0
    },
    {
        question: "–ö–∞–∫–≤–æ –µ finger waving? üëã",
        options: ["–§–æ—Ä–º–∏—Ä–∞–Ω–µ –Ω–∞ S-–æ–±—Ä–∞–∑–Ω–∏ –≤—ä–ª–Ω–∏ —Å –ø—Ä—ä—Å—Ç–∏", "–ü–æ–¥—Å—Ç—Ä–∏–≥–≤–∞–Ω–µ —Å –Ω–æ–∂–∏—Ü–∞", "–ë–æ—è–¥–∏—Å–≤–∞–Ω–µ", "–ò–∑–ø—Ä–∞–≤—è–Ω–µ"],
        correct: 0
    },
    {
        question: "–ö–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ –∑–∞ —Ä—è–∑–∞–Ω–µ –Ω–∞ –∫–æ—Å–∞? ‚úÇÔ∏è",
        options: ["–ù–æ–∂–∏—Ü–∞", "–ë—Ä—ä—Å–Ω–∞—á", "–ì—Ä–µ–±–µ–Ω", "–ú–∞—à–∏–Ω–∫–∞"],
        correct: 2
    },
    {
        question: "–ö–∞–∫–≤–æ –µ –∫–µ—Ä–∞—Ç–∏–Ω? üß™",
        options: ["–ü—Ä–æ—Ç–µ–∏–Ω –≤ –∫–æ—Å–∞—Ç–∞", "–¶–≤—è—Ç", "–®–∞–º–ø–æ–∞–Ω", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"],
        correct: 0
    },
    {
        question: "–ö–æ–ª–∫–æ —Ñ–∞–∑–∏ –∏–º–∞ —Ü–∏–∫—ä–ª—ä—Ç –Ω–∞ —Ä–∞—Å—Ç–µ–∂ –Ω–∞ –∫–æ—Å–∞—Ç–∞? üå±",
        options: ["2", "3", "4", "5"],
        correct: 1
    },
    {
        question: "–ö–∞–∫–≤–æ –µ –∞–ª–æ–ø–µ—Ü–∏—è? üë©‚Äçü¶≤",
        options: ["–ö–æ—Å–æ–ø–∞–¥", "–ö—ä–¥—Ä–µ–Ω–µ", "–ë–æ—è–¥–∏—Å–≤–∞–Ω–µ", "–•–∏–¥—Ä–∞—Ç–∞—Ü–∏—è"],
        correct: 0
    },
    {
        question: "–ö–æ–π –µ –Ω–∞–π-–¥–æ–±—Ä–∏—è—Ç –Ω–∞—á–∏–Ω –∑–∞ —Å—É—à–µ–Ω–µ –Ω–∞ –∫–æ—Å–∞? üå¨Ô∏è",
        options: ["–° –∫—ä—Ä–ø–∞", "–° —Å–µ—à–æ–∞—Ä –Ω–∞ –Ω–∏—Å–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–ù–∞ —Å–ª—ä–Ω—Ü–µ", "–° –ø—Ä–µ—Å–∞"],
        correct: 1
    },
    {
        question: "–ö–∞–∫–≤–æ –µ –æ–º–±—Ä–µ? üé®",
        options: ["–ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ –±–æ—è–¥–∏—Å–≤–∞–Ω–µ", "–ü—ä–ª–Ω–æ –±–æ—è–¥–∏—Å–≤–∞–Ω–µ", "–ü–æ–¥—Å—Ç—Ä–∏–≥–≤–∞–Ω–µ", "–ö—ä–¥—Ä–µ–Ω–µ"],
        correct: 0
    },
    {
        question: "–ö–æ–∏ —Å–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤–µ? üåà",
        options: ["–∂—ä–ª—Ç, –≤–∏–æ–ª–µ—Ç–æ–≤, —Å–∏–Ω", "—Å–∏–Ω, –∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω", "–∑–µ–ª–µ–Ω, –æ—Ä–∞–Ω–∂–µ–≤, —Å–∏–Ω"],
        correct: 1
    },
    {
        question: "–ö–æ–∏ —Ü–≤–µ—Ç–æ–≤–µ —Å–∞ —Ç–æ–ø–ª–∏? üî•",
        options: ["–∂—ä–ª—Ç, –≤–∏–æ–ª–µ—Ç–æ–≤, —á–µ—Ä–≤–µ–Ω", "—Å–∏–Ω, —á–µ—Ä–≤–µ–Ω, –∂—ä–ª—Ç", "—á–µ—Ä–≤–µ–Ω, –æ—Ä–∞–Ω–∂–µ–≤, –∂—ä–ª—Ç"],
        correct: 2
    },
    {
        question: "–ü—Ä–∏ —Å–º–µ—Å–≤–∞–Ω–µ—Ç–æ –Ω–∞ —Ä–∞–≤–Ω–∏ —á–∞—Å—Ç–∏ –æ—Ç –∫–æ–∏ —Ü–≤–µ—Ç–æ–≤–µ —â–µ –ø–æ–ª—É—á–∏–º –Ω–µ—É—Ç—Ä–∞–ª–µ–Ω –∫–∞—Ñ—è–≤ —Ü–≤—è—Ç? üé®",
        options: ["—Å–∏–Ω, –∂—ä–ª—Ç, —á–µ—Ä–≤–µ–Ω", "–≤–∏–æ–ª–µ—Ç–æ–≤, —á–µ—Ä–≤–µ–Ω, –∂—ä–ª—Ç", "–≤–∏–æ–ª–µ—Ç–æ–≤, –∑–µ–ª–µ–Ω, –æ—Ä–∞–Ω–∂–µ–≤"],
        correct: 0
    },
    {
        question: "–ö–∞–∫–≤–æ –Ω–∞—Ä–∏—á–∞–º–µ —Ñ–æ–Ω –Ω–∞ –∏–∑—Å–≤–µ—Ç–ª—è–≤–∞–Ω–µ? üí°",
        options: ["–Ω–æ–≤–æ–æ–±—Ä–∞–∑—É–≤–∞–ª–∏—Ç–µ —Å–µ —Ü–≤–µ—Ç–æ–≤–µ —Å–ª–µ–¥ –∏–∑—Å–≤–µ—Ç–ª—è–≤–∞–Ω–µ—Ç–æ, –±–∏–ª–æ —Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–æ –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∏—Ä–∞–Ω–æ", "—Ü–≤–µ—Ç–æ–≤–µ—Ç–µ –ø—Ä–µ–¥–∏ –∏–∑—Å–≤–µ—Ç–ª—è–≤–∞–Ω–µ –Ω–∞ –∫–æ—Å–∞—Ç–∞", "–∫–æ–∑–º–µ—Ç–∏—á–Ω–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞, –≤—ä—Ä—Ö—É –∫–æ—è—Ç–æ –Ω–∞–Ω–∞—Å—è–º–µ –∏–∑–±—Ä–∞–Ω–∏—è —Ü–≤—è—Ç"],
        correct: 0
    },
    {
        question: "–ó–∞—â–æ —Ü—ä—Ñ—Ç–∏ –∫–æ—Å–∞—Ç–∞? üå∏",
        options: ["–∑–∞—â–æ—Ç–æ —Å–µ —Ç—Ä–µ—Ç–∏—Ä–∞ —á–µ—Å—Ç–æ", "–Ω–∞—Å–∏—â–∞ —Å–µ —Å –∫–∏—Å–ª–æ—Ä–æ–¥", "–∑–∞—â–æ—Ç–æ —Å—Ç–∞—Ä–µ–µ"],
        correct: 2
    },
    {
        question: "–ö–æ–ª–∫–æ –∫–≤–∞–¥—Ä–∞—Ç–∞ –ø–æ–º–µ—â–µ–Ω–∏–µ —Å–∞ –Ω—É–∂–Ω–∏ –∑–∞ –æ—Ç–≤–∞—Ä—è–Ω–µ—Ç–æ –Ω–∞ —Ñ—Ä–∏–∑—å–æ—Ä—Å–∫–∏ —Å–∞–ª–æ–Ω? üè™",
        options: ["3", "6", "9", "11"],
        correct: 2
    },
    {
        question: "–ö–æ–∏ —Å–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏—Ç–µ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ—Ä–∏–∑—å–æ—Ä—Å–∫–∏—Ç–µ —Å–∞–ª–æ–Ω–∏? üïµÔ∏è",
        options: ["–†–ó–ò, –ù–ê–ü", "–†–ó–ò, –ù–ê–ü, –†–°–ü–ê–ë", "–ú–í–†, –ö–ó–ü, –ù–ê–ü"],
        correct: 1
    },
    {
        question: "–ö–æ–µ –æ—Ç –∏–∑–±—Ä–æ–µ–Ω–∏—Ç–µ –æ—Ç–≤–∞—Ä—è –∫–æ—Å—ä–º–∞? üîì",
        options: ["–∞–º–æ–Ω—è–∫", "–∫–∏—Å–ª–æ—Ä–æ–¥", "–≤–æ–¥–æ—Ä–æ–¥", "–ù–∏—Ç–æ –µ–¥–Ω–æ –æ—Ç –∏–∑–±—Ä–æ–µ–Ω–∏—Ç–µ"],
        correct: 0
    },
    {
        question: "–ö–æ–µ –æ—Ç –∏–∑–±—Ä–æ–µ–Ω–∏—Ç–µ –æ—Ç–≥–æ–≤–∞—Ä—è –∑–∞ —Ü–≤–µ—Ç–∞ –Ω–∞ –∫–æ—Å–∞—Ç–∞? üé®",
        options: ["–≤–æ–¥–æ—Ä–æ–¥–Ω–∏ –≤—Ä—ä–∑–∫–∏", "–∫–µ—Ä–∞—Ç–∏–Ω", "–º–µ–ª–∞–Ω–∏–Ω"],
        correct: 2
    },
    {
        question: "–ö–∞–∫–≤–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–≤–∞ –¥—É–∞–ª–Ω–æ—Ç–æ –±–æ—è–¥–∏—Å–≤–∞–Ω–µ? üñåÔ∏è",
        options: ["–∫–æ–≥–∞—Ç–æ –±–æ—è–¥–∏—Å–≤–∞–º–µ –∫–æ—Ä–µ–Ω–∞ —Å –∞–º–æ–Ω—è—á–Ω–∞, –∞ –¥—ä–ª–∂–∏–Ω–∏—Ç–µ —Å –±–µ–∑–∞–º–æ–Ω—è—á–Ω–∞ –±–æ—è", "–∫–æ–≥–∞—Ç–æ –±–æ—è–¥–∏—Å–≤–∞–º–µ –∫–æ—Ä–µ–Ω–∞ —Å –±–µ–∑–∞–º–æ–Ω—è—á–Ω–∞, –∞ –¥—ä–ª–∂–∏–Ω–∏—Ç–µ —Å –∞–º–æ–Ω—è—á–Ω–∞ –±–æ—è", "–∫–æ–≥–∞—Ç–æ –±–æ—è–¥–∏—Å–≤–∞–º–µ –∫–æ—Ä–µ–Ω–∞ —Å —Ç—ä–º–Ω–∞ –±–æ—è, –∞ –¥—ä–ª–∂–∏–Ω–∏—Ç–µ —Å—ä—Å —Å–≤–µ—Ç–ª–∞"],
        correct: 0
    },
    {
        question: "–í –∫–æ—è —á–∞—Å—Ç –Ω–∞ –∫–æ—Å—ä–º–∞ —Å–µ —Å—ä–¥—ä—Ä–∂–∞ –º–µ–ª–∞–Ω–∏–Ω–∞? üß¨",
        options: ["–∫—É—Ç–∏–∫—É–ª–∞", "–º–µ–¥—É–ª–∞", "–∫–æ—Ä—Ç–µ–∫—Å", "–ù–∏—Ç–æ –µ–¥–Ω–æ –æ—Ç –∏–∑–±—Ä–æ–µ–Ω–∏—Ç–µ"],
        correct: 2
    },
    {
        question: "–ö–∞–∫–≤–æ Ph –∏–º–∞ –æ–∫—Å–∏–¥–∞–Ω—Ç—ä—Ç? ‚öóÔ∏è",
        options: ["–∞–ª–∫–∞–ª–Ω–æ", "–∫–∏—Å–µ–ª–∏–Ω–Ω–æ", "–Ω–µ—É—Ç—Ä–∞–ª–Ω–æ"],
        correct: 1
    },
    {
        question: "–ö–∞–∫ —Å–µ –ø–æ–ª—É—á–∞–≤–∞—Ç —Ç—Ä–µ—Ç–∏—á–Ω–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤–µ? üåà",
        options: ["–ø—Ä–∏ —Å–º–µ—Å–≤–∞–Ω–µ—Ç–æ –Ω–∞ –¥–≤–∞ –ø—ä—Ä–≤–∏—á–Ω–∏ —Ü–≤—è—Ç–∞", "–ø—Ä–∏ —Å–º–µ—Å–≤–∞–Ω–µ—Ç–æ –Ω–∞ —Ä–∞–≤–Ω–∏ —á–∞—Å—Ç–∏ –Ω–∞ –µ–¥–∏–Ω –ø—ä—Ä–≤–∏—á–µ–Ω –∏ –µ–¥–∏–Ω –≤—Ç–æ—Ä–∏—á–µ–Ω —Ü–≤—è—Ç", "–ø—Ä–∏ —Å–º–µ—Å–≤–∞–Ω–µ—Ç–æ –Ω–∞ –¥–≤–∞ –≤—Ç–æ—Ä–∏—á–Ω–∏ —Ü–≤—è—Ç–∞"],
        correct: 1
    },
    {
        question: "–ö–∞–∫–≤–æ –µ –Ω–µ—É—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—è? ‚öñÔ∏è",
        options: ["–¥–∞ —Å—ä–±–µ—Ä–µ–º —Ç—Ä–∏—Ç–µ –ø—ä—Ä–≤–∏—á–Ω–∏ —Ü–≤—è—Ç–∞ –≤ —Ä–∞–≤–Ω–∏ —á–∞—Å—Ç–∏ –∏ –¥–∞ –ø–æ–ª—É—á–∏–º –∫–∞—Ñ—è–≤ (–Ω–µ—É—Ç—Ä–∞–ª–µ–Ω —Ü–≤—è—Ç)", "–¥–∞ —Å—ä–±–µ—Ä–µ–º –µ–¥–∏–Ω –ø—ä—Ä–≤–∏—á–µ–Ω –∏ –µ–¥–∏–Ω –≤—Ç–æ—Ä–∏—á–µ–Ω —Ü–≤—è—Ç", "–¥–∞ —Å–º–µ—Å–∏–º –±–æ—è –∏ –æ–∫—Å–∏–¥–∞–Ω—Ç"],
        correct: 0
    },
    {
        question: "–ö–æ–π –Ω–∞—Ä–æ–¥ –ø–æ–ª–∞–≥–∞ –æ—Å–Ω–æ–≤–∏—Ç–µ –Ω–∞ —Å—ä–≤—Ä–µ–º–µ–Ω–Ω–æ—Ç–æ –±—Ä—ä—Å–Ω–∞—Ä—Å—Ç–≤–æ? ü™í",
        options: ["–∞—Ä–∞–±–∏—Ç–µ", "—Ç—É—Ä—Ü–∏—Ç–µ", "—Ä–∏–º–ª—è–Ω–∏—Ç–µ", "–±—Ä–∞–∑–∏–ª—Ü–∏—Ç–µ"],
        correct: 0
    },
    {
        question: "–ö–æ–µ pH –µ –Ω–µ—É—Ç—Ä–∞–ª–Ω–æ? ‚öóÔ∏è",
        options: ["7pH", "14pH", "0pH"],
        correct: 0
    },
    {
        question: "–ö–æ–µ pH –µ –∞–ª–∫–∞–ª–Ω–æ? ‚öóÔ∏è",
        options: ["–ü–æ-–º–∞–ª–∫–æ –æ—Ç 7pH", "–ü–æ-–≥–æ–ª—è–º–æ –æ—Ç 7pH", "4pH"],
        correct: 1
    },
    {
        question: "–ú–µ–ª–∞–Ω–∏–Ω–∞ –æ—Ç–≥–æ–≤–∞—Ä—è –∑–∞? üé®",
        options: ["–¶–≤–µ—Ç–∞ –Ω–∞ –∫–æ—Å–∞—Ç–∞, –∫–æ–∂–∞—Ç–∞, –æ—á–∏—Ç–µ", "–ó–¥—Ä–∞–≤–∏–Ω–∞—Ç–∞ –Ω–∞ –∫–æ—Å—ä–º–∞", "–ì—ä–≤–∫–∞–≤–æ—Å—Ç –Ω–∞ –∫–æ—Å—ä–º–∞"],
        correct: 0
    },
    {
        question: "–•–∏–º–∏—á–µ–Ω —Å—ä—Å—Ç–∞–≤ –Ω–∞ –∫–æ—Å—ä–º–∞? üß™",
        options: ["–ö–∞–ª—Ü–∏–π, –í–æ–¥–æ—Ä–æ–¥, –ö–∞–ª–∏–π, –°—è—Ä–∞, –ö–∏—Å–ª–æ—Ä–æ–¥", "–í—ä–≥–ª–µ—Ä–æ–¥, –ö–∏—Å–ª–æ—Ä–æ–¥, –ê–∑–æ—Ç, –í–æ–¥–æ—Ä–æ–¥, –°—è—Ä–∞", "–ú–∞–≥–Ω–µ–∑–∏–π, –í—ä–≥–ª–µ—Ä–æ–¥, –ö–∞–ª—Ü–∏–π, –•—Ä–æ–º, –ê–∑–æ—Ç"],
        correct: 1
    },
    {
        question: "–ö–æ–ª–∫–æ –º–∏–Ω—É—Ç–∏ —Å–µ —Å—Ç–æ–∏ —Å –∫—ä–¥—Ä–∏–Ω–∞? üåÄ",
        options: ["45–º–∏–Ω.", "–û–ø—Ä–µ–¥–µ–ª—è —Å–µ —Å–ø–æ—Ä–µ–¥ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ –∫–æ—Å–∞—Ç–∞", "10–º–∏–Ω.", "30–º–∏–Ω."],
        correct: 1
    },
    {
        question: "–ö–æ–ª–∫–æ –≤—Ä–µ–º–µ —Å–µ —Å—Ç–æ–∏ —Å —Ñ–∏–∫—Å–∞–∂–∞? ‚è±Ô∏è",
        options: ["10–º–∏–Ω.", "45–º–∏–Ω.", "15–º–∏–Ω."],
        correct: 0
    },
    {
        question: "–ö–∞–∫–≤–æ —Å–µ —Å–ª—É—á–≤–∞ —Å –∫–æ—Å–∞—Ç–∞ –ø–æ –≤—Ä–µ–º–µ –Ω–∞ –∫—ä–¥—Ä–µ–Ω–µ? üåÄ",
        options: ["–ü—Ä–æ–º–µ–Ω—è —Å–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ç–∞ –Ω–∞ –∫–æ—Å—ä–º–∞", "–ü–æ–¥—Ö—Ä–∞–Ω–≤–∞ —Å–µ", "–ù–∞—Å–∏—â–∞ —Å–µ —Å –∫–∏—Å–ª–æ—Ä–æ–¥"],
        correct: 0
    },
    {
        question: "–ö–∞–∫–≤–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–≤–∞ –∫–æ—Ä–µ–∫—Ç–æ—Ä—ä—Ç? üé®",
        options: ["–ù–µ–æ—Ç—Ä–∞–ª–∏–∑–∏—Ä–∞ –∏–ª–∏ –ø–æ–¥—Å–∏–ª–≤–∞ —Ü–≤–µ—Ç–∞", "–ü–æ–¥—Ö—Ä–∞–Ω–≤–∞ –∫–æ—Å–∞—Ç–∞ –ø—Ä–∏ –±–æ—è–¥–∏—Å–≤–∞–Ω–µ", "–õ–∞–º–∏–Ω–∏—Ä–∞ –∫–æ—Å—ä–º–∞"],
        correct: 0
    },
    {
        question: "–ö–æ–ª–∫–æ –º–∏–Ω—É—Ç–∏ —Å–µ —Å—Ç–æ–∏ —Å –∞–º–æ–Ω—è—á–Ω–∞ –±–æ—è? üñåÔ∏è",
        options: ["45–º–∏–Ω.", "30–º–∏–Ω.", "10–º–∏–Ω."],
        correct: 1
    },
    {
        question: "–ö–æ–ª–∫–æ –≤—Ä–µ–º–µ —Å–µ —Å—Ç–æ–∏ —Å –±–µ–∑–∞–º–æ–Ω—è—á–Ω–∞ –±–æ—è? üñåÔ∏è",
        options: ["35–º–∏–Ω.", "60–º–∏–Ω.", "45–º–∏–Ω."],
        correct: 2
    },
    {
        question: "–ö–æ–ª–∫–æ –≤—Ä–µ–º–µ —Å–µ —Å—Ç–æ–∏ —Å –º—ä–∂–∫–∞ –±–æ—è –∑–∞ –∫–æ—Å–∞? üñåÔ∏è",
        options: ["10–º–∏–Ω.", "16–º–∏–Ω.", "30–º–∏–Ω."],
        correct: 0
    },
    {
        question: "–ö–∞–∫–≤–æ –æ–∑–Ω–∞—á–∞–≤–∞ –ª–∞–º–∏–Ω–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ—Å–∞—Ç–∞? üõ°Ô∏è",
        options: ["–û–±–∏—Ä–∞–Ω–µ –Ω–∞ —Ü—ä—Ñ—Ç–µ–∂–∞", "–í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ç–∞ –Ω–∞ –∫–æ—Å—ä–º–∞, —á—Ä–µ–∑ —Ç–µ—Ä–∞–ø–∏—è"],
        correct: 1
    }
];

const letters = ['–ê', '–ë', '–í', '–ì'];

async function hashPassword(password) {
    const msgBuffer = new TextEncoder().encode(password);
    const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);
    const hashArray = Array.from(new Uint8Array(hashBuffer));
    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
}

const startScreen = document.getElementById('start-screen');
const quizScreen = document.getElementById('quiz-screen');
const resultsScreen = document.getElementById('results-screen');
const adminScreen = document.getElementById('admin-screen');
const adminLoginScreen = document.getElementById('admin-login-screen');

const startBtn = document.getElementById('start-btn');
const adminBtn = document.getElementById('admin-btn');
const backToStart = document.getElementById('back-to-start');
const backToStartFromLogin = document.getElementById('back-to-start-from-login');
const submitPassword = document.getElementById('submit-password');
const questionCount = document.getElementById('question-count');
questionCount.textContent = questions.length;

let shuffledQuestions = [];
let currentQuestion = 0;
let answers = [];

startBtn.addEventListener('click', startQuiz);
adminBtn.addEventListener('click', showAdminLogin);
backToStart.addEventListener('click', showStart);
backToStartFromLogin.addEventListener('click', showStart);
submitPassword.addEventListener('click', async () => {
    const password = document.getElementById('admin-password').value;
    const hashedInput = await hashPassword(password);
    const correctHash = await hashPassword('saloniva11');
    if (hashedInput === correctHash) {
        adminLoginScreen.classList.add('hidden');
        adminScreen.classList.remove('hidden');
        renderQuestionList();
    } else {
        alert('–ì—Ä–µ—à–Ω–∞ –ø–∞—Ä–æ–ª–∞! üîê');
    }
});

function shuffle(array) {
    return array.sort(() => Math.random() - 0.5);
}

function startQuiz() {
    shuffledQuestions = shuffle([...questions]);
    answers = new Array(shuffledQuestions.length).fill(null);
    currentQuestion = 0;
    startScreen.classList.add('hidden');
    quizScreen.classList.remove('hidden');
    updateProgress();
    showQuestion();
}

function updateProgress() {
    const answeredCount = answers.filter(a => a !== null).length;
    const progressFill = document.getElementById('progress-fill');
    progressFill.style.width = `${(answeredCount / shuffledQuestions.length) * 100}%`;
}

function showQuestion() {
    const questionEl = document.getElementById('question');
    const questionNumberEl = document.getElementById('question-number');
    const optionsEl = document.getElementById('options');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const submitBtn = document.getElementById('submit-btn');

    questionNumberEl.textContent = `–í—ä–ø—Ä–æ—Å ${currentQuestion + 1} –æ—Ç ${shuffledQuestions.length}`;
    questionEl.textContent = shuffledQuestions[currentQuestion].question;
    optionsEl.innerHTML = '';
    shuffledQuestions[currentQuestion].options.forEach((opt, i) => {
        const div = document.createElement('div');
        div.classList.add('option');
        div.innerHTML = `<span class="letter">${letters[i]}</span> ${opt}`;
        div.addEventListener('click', () => selectOption(i));
        if (answers[currentQuestion] === i) div.classList.add('selected');
        optionsEl.appendChild(div);
    });

    prevBtn.disabled = currentQuestion === 0;
    nextBtn.textContent = currentQuestion < shuffledQuestions.length - 1 ? '–ù–∞–ø—Ä–µ–¥ ‚û°Ô∏è' : '–ü—Ä–µ–¥–∞–≤–∞–Ω–µ üì§';
    submitBtn.classList.add('hidden');

    if (currentQuestion === shuffledQuestions.length - 1) {
        submitBtn.classList.remove('hidden');
        nextBtn.classList.add('hidden');
    } else {
        submitBtn.classList.add('hidden');
        nextBtn.classList.remove('hidden');
    }
}

function selectOption(index) {
    answers[currentQuestion] = index;
    updateProgress();
    showQuestion();
}

document.getElementById('prev-btn').addEventListener('click', () => {
    currentQuestion--;
    showQuestion();
});

document.getElementById('next-btn').addEventListener('click', () => {
    if (currentQuestion < shuffledQuestions.length - 1) {
        currentQuestion++;
        showQuestion();
    } else {
        showResults();
    }
});

document.getElementById('submit-btn').addEventListener('click', showResults);

function showResults() {
    quizScreen.classList.add('hidden');
    resultsScreen.classList.remove('hidden');

    let correctCount = 0;
    const answersEl = document.getElementById('answers');
    answersEl.innerHTML = '';
    shuffledQuestions.forEach((q, i) => {
        const div = document.createElement('div');
        const isCorrect = answers[i] === q.correct;
        const score = isCorrect ? 1 : 0;
        if (isCorrect) correctCount++;
        div.classList.add('answer-card', isCorrect ? 'correct' : 'incorrect');
        div.innerHTML = `
            <hr>
            <div class="result-question"><span><b>–í—ä–ø—Ä–æ—Å ${i + 1}</b></span> &nbsp; ${q.question}</div>
            ${!isCorrect && answers[i] !== null ? `<div><i>–¢–≤–æ–π –æ—Ç–≥–æ–≤–æ—Ä:</i> &nbsp; ${letters[answers[i]]}. ${q.options[answers[i]]} ‚ùå</div>` : ''}
            <div><i>–ü—Ä–∞–≤–∏–ª–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä:</i> &nbsp; ${letters[q.correct]}. ${q.options[q.correct]} ${isCorrect ? '‚úÖ' : 'üéØ'}</div>
            <div class="last-row"><b>–¢–æ—á–∫–∏:</b> &nbsp; <span class="${isCorrect ? 'correct' : 'wrong'}">${score}</span> ${isCorrect ? '‚úÖ' : '‚ùå'}</div>
        `;
        answersEl.appendChild(div);
    });

    const total = shuffledQuestions.length;
    const percentCorrect = (correctCount / total * 100).toFixed(2);
    const percentIncorrect = (100 - percentCorrect).toFixed(2);
    document.getElementById('score').textContent = `–†–µ–∑—É–ª—Ç–∞—Ç: ${correctCount}/${total} (${percentCorrect}% –≤–µ—Ä–Ω–∏ ‚úÖ | ${percentIncorrect}% –≥—Ä–µ—à–Ω–∏ ‚ùå)`;

    // Pie Chart
    const ctx = document.getElementById('result-chart').getContext('2d');
    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ['–í–µ—Ä–Ω–∏', '–ì—Ä–µ—à–Ω–∏'],
            datasets: [{
                data: [percentCorrect, percentIncorrect],
                backgroundColor: ['#32cd32', '#ff6347'],
                borderColor: ['#228b22', '#ffa07a'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        font: {
                            family: 'Poppins',
                            size: 14
                        }
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return `${context.label}: ${context.parsed}%`;
                        }
                    }
                }
            }
        }
    });
}

document.getElementById('restart-btn').addEventListener('click', () => {
    resultsScreen.classList.add('hidden');
    startScreen.classList.remove('hidden');
});

function showAdminLogin() {
    startScreen.classList.add('hidden');
    adminLoginScreen.classList.remove('hidden');
}

function showStart() {
    adminScreen.classList.add('hidden');
    adminLoginScreen.classList.add('hidden');
    startScreen.classList.remove('hidden');
    questionCount.textContent = questions.length;
}

function renderQuestionList() {
    const list = document.getElementById('question-list');
    list.innerHTML = '';
    questions.forEach((q, i) => {
        const div = document.createElement('div');
        div.innerHTML = `
            <p>${q.question}</p>
            <input type="text" value="${q.question}" id="edit-q-${i}">
            ${q.options.map((opt, j) => `<input type="text" value="${opt}" id="edit-opt-${i}-${j}">`).join('')}
            <input type="number" value="${q.correct + 1}" id="edit-correct-${i}">
            <button onclick="editQuestion(${i})">–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π ‚úèÔ∏è</button>
            <button onclick="deleteQuestion(${i})">–ò–∑—Ç—Ä–∏–π üóëÔ∏è</button>
        `;
        list.appendChild(div);
    });
}

window.editQuestion = function(index) {
    const q = document.getElementById(`edit-q-${index}`).value;
    const opts = [];
    for (let j = 0; j < 4; j++) {
        const opt = document.getElementById(`edit-opt-${index}-${j}`)?.value;
        if (opt) opts.push(opt);
    }
    const correct = parseInt(document.getElementById(`edit-correct-${index}`).value) - 1;
    questions[index] = { question: q, options: opts, correct };
    renderQuestionList();
}

window.deleteQuestion = function(index) {
    questions.splice(index, 1);
    renderQuestionList();
}

document.getElementById('add-question').addEventListener('click', () => {
    const q = document.getElementById('new-question').value;
    const opts = [
        document.getElementById('option1').value,
        document.getElementById('option2').value,
        document.getElementById('option3').value,
        document.getElementById('option4').value
    ].filter(opt => opt);
    const correct = parseInt(document.getElementById('correct-option').value) - 1;
    if (q && opts.length >= 2 && correct >= 0 && correct < opts.length) {
        questions.unshift({ question: q, options: opts, correct });
        renderQuestionList();
        document.getElementById('new-question').value = '';
        document.getElementById('option1').value = '';
        document.getElementById('option2').value = '';
        document.getElementById('option3').value = '';
        document.getElementById('option4').value = '';
        document.getElementById('correct-option').value = '';
    } else {
        alert('–ü–æ–ø—ä–ª–Ω–∏ –≤—Å–∏—á–∫–æ –ø—Ä–∞–≤–∏–ª–Ω–æ! üìù');
    }
});